name: Tests
on: [push, pull_request]
jobs:
  test:
    name: test-tasks-server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install curl
        run: sudo apt-get update && sudo apt-get install -y curl
      - name: Install bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: sh install.sh
      - name: Tests
        run: bun run test
  build-linux:
    name: build-linux-${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        target: [x64, arm64]
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: sh install.sh
      - name: Initialize database
        run: |
          bun run init-db.ts
          ls -lh .database/tasks.db
          ls -lh .database/tasks-throttle.db
      - name: Compile
        run: |
          if [[ "${{ matrix.target }}" == "x64" ]]; then
            bun build --compile --minify --sourcemap src/main.ts --outfile ./tasks-server
          elif [[ "${{ matrix.target }}" == "arm64" ]]; then
            bun build --compile --target=bun-linux-arm64 --minify --sourcemap src/main.ts --outfile ./tasks-server-arm64
          fi
      - name: Verify output
        run: |
          if [[ "${{ matrix.target }}" == "x64" ]]; then
            ls -lh ./tasks-server
          elif [[ "${{ matrix.target }}" == "arm64" ]]; then
            ls -lh ./tasks-server-arm64
          fi
